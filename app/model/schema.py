from marshmallow import Schema,fields

class ApplicationSchema(Schema):
    id=fields.Integer(dump_only=True)
    type_demand=fields.String()
    license=fields.Boolean()
    first_name=fields.String()
    last_name=fields.String()
    passport_id_Card=fields.String()
    birthdate=fields.Date()
    birth_place=fields.String()
    gender=fields.String()
    address=fields.String()
    resid_city=fields.String()
    resid_state=fields.String()
    resid_country=fields.String()
    postal_code=fields.String()
    phone=fields.String()
    email=fields.String()
    nationality=fields.String()
    weight=fields.Integer()
    height=fields.Integer()
    hair=fields.String()
    eyes=fields.String()
    curr_lic_detention=fields.Boolean()
    lic_eversusp = fields.Boolean()
    type_license=fields.String()
    lic_number=fields.String()
    lic_issue_date=fields.Date()
    underst_french=fields.Boolean()
    underst_english=fields.Boolean()
    knowledge_test=fields.Boolean()
    test_applied_for = fields.String()
    test_success = fields.String()
    date_of_test_compl = fields.String()
    skillTest=fields.Boolean()
    aircraft = fields.String()
    time_in_aircraft =fields.Integer()
    hours_of_flight=fields.Integer()
    graduate_ato = fields.Boolean()
    name_institution = fields.String()
    inst_city=fields.String()
    inst_state=fields.String()
    inst_country=fields.String()
    ato_certiciate_no = fields.String()
    grad_date=fields.Date()
    holder_foreign_lic=fields.Boolean()
    foreignlic_country=fields.String()
    type_of_foreign_lic=fields.String()
    lic_rating= fields.String()
    military_competence = fields.Boolean()
    service=fields.String()
    milit_grad_date=fields.Date()
    service_number = fields.String()
    has_flied_10hours =fields.Boolean()
    last_flight_Check_date=fields.Date()
    final_certifying = fields.Boolean()
    regDate=fields.Date()

appl_schema = ApplicationSchema()
appls_schema = ApplicationSchema(many = True)



class RecommandationSchema(Schema):
    id = fields.Integer(dump_only=True)
    applic_id=fields.Integer()
    service_number=fields.String()
    personally_instructed=fields.Boolean()
    date_of_instr=fields.Date()
    name_of_instr=fields.String()
    license_number=fields.String()
    expiration_date=fields.Date()
    approved_training_org=fields.Boolean()
    course_completed=fields.String()
    endorsed_test=fields.String()
    ato_date = fields.Date()
    ato_name=fields.String()
    ato_certiciate_no=fields.String()
    name_recommender = fields.String()
    title_recommender = fields.String()
    reviewed_theperson_applicant=fields.Boolean()
    knowledge_test=fields.Boolean()
    retake_of_passtest=fields.Boolean()
    retest_after_failure=fields.Boolean()
    reviewed_and_not_authorize=fields.Boolean()
    remarks=fields.String()
    name_inspector=fields.String()
    title_inspector=fields.String()
    date_inspect=fields.Date()

recomm_schema=RecommandationSchema()
recomms_schema=RecommandationSchema(many=True)



class SkillTestSchema(Schema):
    id=fields.Integer(dump_only=True)
    applic_id=fields.Integer()
    applicant_meets_reqs=fields.Boolean()
    applicant_and_results=fields.Boolean()
    approved=fields.Boolean()
    disapproved_notice=fields.Boolean()
    applicant_meets_linguistics=fields.Boolean()
    ling_french=fields.Boolean()
    ling_english=fields.Boolean()
    test_city=fields.String()
    test_state=fields.String()
    test_country=fields.String()
    duration_of_test=fields.Integer()
    examiner_number=fields.String()
    licensefor_which_tested=fields.String()
    date__test=fields.Date()
    name_examiner=fields.String()

skillTest_schema=SkillTestSchema()
skillTests_schema=SkillTestSchema(many = True)


class Anac_ReportSchema(Schema):
    id=fields.Integer(dump_only=True)
    applic_id=fields.Integer()
    accepted=fields.Boolean()
    rejected=fields.Boolean()
    renewal_license=fields.Boolean()
    reissue_license=fields.Boolean()
    issue_certificate=fields.Boolean()
    other=fields.Boolean()
    suspended_license=fields.Boolean()
    knowledge_test_report=fields.Boolean()
    skillTest_Report=fields.Boolean()
    notice_denial=fields.Boolean()
    grad_certificate=fields.Boolean()
    copy_identification=fields.Boolean()
    verif_auth=fields.Boolean()
    government_identification=fields.String()
    identification_number=fields.String()
    expiration_date=fields.Date()
    certificate_maybe_issued = fields.Boolean()
    applicant_missing_documents = fields.Boolean()
    name_inspector=fields.String()
    title_inspector=fields.String()
    date = fields.Date()

anac_Report_schema = Anac_ReportSchema()
anac_Reports_schema = Anac_ReportSchema(many=True)


class Final_IssuanceSchema(Schema):
    id = fields.Integer(dump_only=True)
    applic_id=fields.Integer()
    license_issued=fields.String()
    license_expdate=fields.Date()
    qualification=fields.String()
    qualif_expdate=fields.Date()
    authorization=fields.String()
    author_expdate=fields.Date()
    validation_certificate=fields.String()
    valid_expdate=fields.Date()
    issuance_date=fields.Date()
    official_name=fields.String()
    official_title=fields.String()
    final_date=fields.Date()

final_Issuance_schema = Final_IssuanceSchema()
final_Issuances_schema = Final_IssuanceSchema(many=True)


class Admin_userSchema(Schema):
    id=fields.Integer(dump_only=True)
    first_name=fields.String()
    last_name=fields.String()
    username=fields.String()
    password=fields.String()
    regDate=fields.Date()

useradmin_schema=Admin_userSchema()
useradmins_schema=Admin_userSchema(many=True)

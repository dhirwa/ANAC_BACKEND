"""empty message

Revision ID: b04bb5506597
Revises: 
Create Date: 2017-01-26 11:13:39.360976

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b04bb5506597'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_demand', sa.String(length=50), nullable=True),
    sa.Column('license', sa.Boolean(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('passport_id_Card', sa.String(length=50), nullable=True),
    sa.Column('birthdate', sa.DateTime(), nullable=True),
    sa.Column('birth_place', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('resid_city', sa.String(length=50), nullable=True),
    sa.Column('resid_state', sa.String(length=50), nullable=True),
    sa.Column('resid_country', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('nationality', sa.String(length=50), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('hair', sa.String(length=50), nullable=True),
    sa.Column('eyes', sa.String(length=50), nullable=True),
    sa.Column('curr_lic_detention', sa.Boolean(), nullable=True),
    sa.Column('lic_eversusp', sa.Boolean(), nullable=True),
    sa.Column('type_license', sa.String(length=50), nullable=True),
    sa.Column('lic_number', sa.String(length=50), nullable=True),
    sa.Column('lic_issue_date', sa.DateTime(), nullable=True),
    sa.Column('underst_french', sa.Boolean(), nullable=True),
    sa.Column('underst_english', sa.Boolean(), nullable=True),
    sa.Column('knowledge_test', sa.Boolean(), nullable=True),
    sa.Column('test_applied_for', sa.String(length=50), nullable=True),
    sa.Column('test_success', sa.String(length=50), nullable=True),
    sa.Column('date_of_test_compl', sa.String(length=50), nullable=True),
    sa.Column('skillTest', sa.Boolean(), nullable=True),
    sa.Column('aircraft', sa.String(length=50), nullable=True),
    sa.Column('time_in_aircraft', sa.Integer(), nullable=True),
    sa.Column('hours_of_flight', sa.Integer(), nullable=True),
    sa.Column('graduate_ato', sa.Boolean(), nullable=True),
    sa.Column('name_institution', sa.String(length=100), nullable=True),
    sa.Column('inst_city', sa.String(length=50), nullable=True),
    sa.Column('inst_state', sa.String(length=50), nullable=True),
    sa.Column('inst_country', sa.String(length=50), nullable=True),
    sa.Column('ato_certiciate_no', sa.String(length=50), nullable=True),
    sa.Column('grad_date', sa.DateTime(), nullable=True),
    sa.Column('holder_foreign_lic', sa.Boolean(), nullable=True),
    sa.Column('foreignlic_country', sa.String(length=50), nullable=True),
    sa.Column('type_of_foreign_lic', sa.String(length=50), nullable=True),
    sa.Column('lic_rating', sa.String(length=50), nullable=True),
    sa.Column('military_competence', sa.Boolean(), nullable=True),
    sa.Column('service', sa.String(length=100), nullable=True),
    sa.Column('milit_grad_date', sa.DateTime(), nullable=True),
    sa.Column('service_number', sa.String(length=50), nullable=True),
    sa.Column('has_flied_10hours', sa.Boolean(), nullable=True),
    sa.Column('last_flight_Check_date', sa.DateTime(), nullable=True),
    sa.Column('final_certifying', sa.Boolean(), nullable=True),
    sa.Column('regDate', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('anac__report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applic_id', sa.Integer(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('rejected', sa.Boolean(), nullable=True),
    sa.Column('renewal_license', sa.Boolean(), nullable=True),
    sa.Column('reissue_license', sa.Boolean(), nullable=True),
    sa.Column('issue_certificate', sa.Boolean(), nullable=True),
    sa.Column('other', sa.Boolean(), nullable=True),
    sa.Column('suspended_license', sa.Boolean(), nullable=True),
    sa.Column('knowledge_test_report', sa.Boolean(), nullable=True),
    sa.Column('skillTest_Report', sa.Boolean(), nullable=True),
    sa.Column('notice_denial', sa.Boolean(), nullable=True),
    sa.Column('grad_certificate', sa.Boolean(), nullable=True),
    sa.Column('copy_identification', sa.Boolean(), nullable=True),
    sa.Column('verif_auth', sa.Boolean(), nullable=True),
    sa.Column('government_identification', sa.String(length=50), nullable=True),
    sa.Column('identification_number', sa.String(length=50), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('certificate_maybe_issued', sa.Boolean(), nullable=True),
    sa.Column('applicant_missing_documents', sa.Boolean(), nullable=True),
    sa.Column('name_inspector', sa.String(length=50), nullable=True),
    sa.Column('title_inspector', sa.String(length=50), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['applic_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final__issuance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applic_id', sa.Integer(), nullable=True),
    sa.Column('license_issued', sa.String(length=50), nullable=True),
    sa.Column('license_expdate', sa.DateTime(), nullable=True),
    sa.Column('qualification', sa.String(length=50), nullable=True),
    sa.Column('qualif_expdate', sa.DateTime(), nullable=True),
    sa.Column('authorization', sa.String(length=50), nullable=True),
    sa.Column('author_expdate', sa.DateTime(), nullable=True),
    sa.Column('validation_certificate', sa.String(length=50), nullable=True),
    sa.Column('valid_expdate', sa.DateTime(), nullable=True),
    sa.Column('issuance_date', sa.DateTime(), nullable=True),
    sa.Column('official_name', sa.String(length=50), nullable=True),
    sa.Column('official_title', sa.String(length=50), nullable=True),
    sa.Column('final_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['applic_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommandation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applic_id', sa.Integer(), nullable=True),
    sa.Column('service_number', sa.String(length=50), nullable=True),
    sa.Column('personally_instructed', sa.Boolean(), nullable=True),
    sa.Column('date_of_instr', sa.DateTime(), nullable=True),
    sa.Column('name_of_instr', sa.String(length=50), nullable=True),
    sa.Column('license_number', sa.String(length=50), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('approved_training_org', sa.Boolean(), nullable=True),
    sa.Column('course_completed', sa.String(length=50), nullable=True),
    sa.Column('endorsed_test', sa.String(length=50), nullable=True),
    sa.Column('ato_date', sa.DateTime(), nullable=True),
    sa.Column('ato_name', sa.String(length=100), nullable=True),
    sa.Column('ato_certiciate_no', sa.String(length=50), nullable=True),
    sa.Column('name_recommender', sa.String(length=50), nullable=True),
    sa.Column('title_recommender', sa.String(length=50), nullable=True),
    sa.Column('reviewed_theperson_applicant', sa.Boolean(), nullable=True),
    sa.Column('knowledge_test', sa.Boolean(), nullable=True),
    sa.Column('retake_of_passtest', sa.Boolean(), nullable=True),
    sa.Column('retest_after_failure', sa.Boolean(), nullable=True),
    sa.Column('reviewed_and_not_authorize', sa.Boolean(), nullable=True),
    sa.Column('remarks', sa.String(length=300), nullable=True),
    sa.Column('name_inspector', sa.String(length=50), nullable=True),
    sa.Column('title_inspector', sa.String(length=50), nullable=True),
    sa.Column('date_inspect', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['applic_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applic_id', sa.Integer(), nullable=True),
    sa.Column('applicant_meets_reqs', sa.Boolean(), nullable=True),
    sa.Column('applicant_and_results', sa.Boolean(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('disapproved_notice', sa.Boolean(), nullable=True),
    sa.Column('applicant_meets_linguistics', sa.Boolean(), nullable=True),
    sa.Column('ling_french', sa.Boolean(), nullable=True),
    sa.Column('ling_english', sa.Boolean(), nullable=True),
    sa.Column('test_city', sa.String(length=50), nullable=True),
    sa.Column('test_state', sa.String(length=50), nullable=True),
    sa.Column('test_country', sa.String(length=50), nullable=True),
    sa.Column('duration_of_test', sa.Integer(), nullable=True),
    sa.Column('examiner_number', sa.String(length=50), nullable=True),
    sa.Column('licensefor_which_tested', sa.String(length=50), nullable=True),
    sa.Column('date__test', sa.DateTime(), nullable=True),
    sa.Column('name_examiner', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['applic_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('skill_test')
    op.drop_table('recommandation')
    op.drop_table('final__issuance')
    op.drop_table('anac__report')
    op.drop_table('application')
    # ### end Alembic commands ###
